// Generated by AvoCode VERSION 0.0.1, PLEASE EDIT WITH CARE
/* eslint-disable */

var isDev = process.env.NODE_ENV !== "production";

if (typeof __DEV__ !== 'undefined') {
  isDev = __DEV__;
}


var amplitude = require("avo-amplitude-js");

var amplitudeDevApiKey = "26aeb7d9e9737f62d9bc9d10f7efdc9a";
var amplitudeProdApiKey = "26aeb7d9e9737f62d9bc9d10f7efdc9a";

var asserts;

var gimmeCutestuff = function(gifUrl) {
  if (isDev === true) {
    assertGifUrl(gifUrl);
  }
  
  if (isDev === true) {
    console.log("[avo] Event sent:", "Gimme Cutestuff", {"Gif URL": gifUrl});
  }
  
  amplitude.logEvent("Gimme Cutestuff", {"Gif URL": gifUrl});
};

if (isDev === true) {
  var assertNewValue = function(newValue) {
    asserts.assertInt("New Value", newValue);
  };
  
  var assertAnimal = function(animal) {
    asserts.assertString("Animal", animal);
    if (animal !== "Puppy" && animal !== "Kitten") {
      console.warn("Animal", "should match one of the following values [", 
        "Puppy | Kitten", "] but you provided the value", 
        JSON.stringify(animal));
    }
  };
  
  var assertOldValue = function(oldValue) {
    asserts.assertInt("Old Value", oldValue);
  };
  
  var assertNumberOfGifsInSession = function(numberOfGifsInSession) {
    asserts.assertInt("Number of Gifs in Session", numberOfGifsInSession);
    asserts.assertMin("Number of Gifs in Session", 0, numberOfGifsInSession);
  };
  
  var assertGifUrl = function(gifUrl) {
    asserts.assertString("Gif URL", gifUrl);
  };
}

exports.gimmeCutestuff = gimmeCutestuff;


function setup_(options) {
  if (options && !options.validateProperties) {
    isDev = false;
  }

  var amplitudeKeyToUse = (options && options.useProductionKey) ?
    amplitudeProdApiKey :
    amplitudeDevApiKey;
  amplitude.init(amplitudeKeyToUse);

}

exports.setup_ = setup_;

setup_();

if (isDev === true) {
  asserts = require("avo-assert-js");
}
